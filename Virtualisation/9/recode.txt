9.0
比例份额proportional-share （公平份额fair-share）
调度程序的最终目标是让每个工作能获得一定比例的CPU

9.1
彩票调度
彩票数ticket 代表进程占用某个资源的份额
一个进程的彩票数占总彩票数的百分比就是占用资源的份额
如果processA有75彩票，process B有25彩票
那我们希望A占用CPU75%的时间，B是25%
调度程序知道彩票数（100张，No从0～99）
调度程序会从0～99抽一张彩票
中奖的彩票决定了运行A还是B
好处：
	可以避免边角情况 
	此方法很轻量，不需要记录任何状态
	快
9.2
彩票货币ticket currency
	全局彩票为200
	假设进程A和进程B各有100张票
	A有两个工作，B有一个工作
	进程A里有自己的货币currency一共有1000个，它的每个工作有500个货币
	进程B有自己的货币currency一共有10个，它的工作有10个货币
	将货币currency转为全局彩票
	A 工作1:50 工作 2:50 
	B 工作 100
彩票转让ticket transfer
	一个进程可以将自己的彩票转给另一个进程
	在客户端服务端中
	客户端process给服务端发送消息
	为了加快服务端执行，客户端可以把彩票转给服务端
	服务端执行结束后把彩票归还给客户端
彩票通胀ticket inflation
	利用通胀，一个进程可以提升或降低彩票数量
	用于进程之间相互信任的环境
	如果进程需要更多CPU时间，就可以加彩票
	这一切不需要和其他process通信

9.5
为工作分配彩票

9.6
步长调度 stride scheduling
	每个工作都有自己的步长
	这个值与票数值成反比
	用一个比较大的数除以票数就是步长（比如ABC进程的彩票为50，100，250，那么他们的stride可能是，200，100，40）
	程序每次运行后，会让这个process的计数器增加它的stride，记录总体进展
	当要进行调度是会选择strip最小的
	
彩票调度的优势：
	不需要全局状态
	在stride scheduling里，如果一个新进程加进来，那它的stride是0，就会一直运行它

问题：
	两种方式都不能很好的适合IO
	开始的票数分配也很难