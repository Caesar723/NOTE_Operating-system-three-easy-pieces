4.0
上下文切换 context switch
	让操作系统让操作系统停止运行一个程序然后给CPU运行另一个程序
时分共享 time sharing 
	允许资源由一个实体使用一小段时间，然后由另一个实体使用一小段时间，资源-（CPU 或网络连接）可以被许多人共享

空分共享
	资源在空间上划分给希望用它的人
·	一旦将块分配给文件，在用户删除之前，不会将它分配给其他文件
策略调度 scheduling policy
	用来决定操作系统应该运行哪些程序

4.1
机器状态machine state
	进程可以访问的内存-地址空间address space 是进程的一部分
	寄存器 PC 有时叫 IP-指令指针Instruction pointer 
	栈指针 stack pointer 帧指针 frame pointer 管理函数参数栈，局部变量和返回地址

4.2
进程API
	创建create
	销毁destroy 强制销毁接口
	等待 wait 等待进程停止
	其他控制 miscellaneous control 如暂停进程然后恢复运行
	状态 status 如运行多长时间

4.3
进程创建
	将代码和所有静态数据load到内存中-需要操作系统从磁盘读取其字节，并将它们放在内存的某处
	为程序的 运行时栈run-time stack 或叫 stack 分配内存(stack 存放局部变量，函数参数，返回地址)
	操作系统分配内存并提供给进程
	操作系统可以用参数来初始化栈-会将参数输入main()函数就是int argc ,char *argv[]
	操作系统可能为堆 heap（显示请求的动态分配数据）分配内存
	操作系统会执行一些其他初始化任务，特别是io任务
	跳转到main()列程
4.4
进程状态
	运行running 进程正在处理器上运行
	就绪ready 进程已经做好准备，因某种原因还不能现在运行
	阻塞 blocked 例如磁盘发起io请求
4.5
数据结构
	进程有最终状态final 允许其他进程-大多为父进程，检查返回码，并查看是否成功运行，通常成功是0（return 0;）
