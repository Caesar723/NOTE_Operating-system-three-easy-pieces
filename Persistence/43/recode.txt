43.0
别的文件系统-日志结构文件系统log- structured file system
	原因
		内存大小不断增加
		宽带传输增加
		现有文件系统在许多工作负载上表现不佳
		文件系统不支持RAID

	写入磁盘时，LFS会将更新缓存在内存段中
	当段满了的时候
	它会写入磁盘
	传到磁盘未使用部分（不会覆盖现有数据）
	因为段很大，可以有效利用磁盘

43.1
按顺序写入磁盘
	就是按顺序写入
	inode指向数据块

43.2
为了使写入时间变少
用写入缓冲write buffering
	在写入磁盘之前
	LFS会跟踪内存的更新
	当收到足够量的更新时
	会写入磁盘
	被写入磁盘的那一大块叫段segment

43.4
找inode

inode映射 inode map
	imap-输入inode号输出inode磁盘地址
	每次将inode写入时，会更新imap
	映射会在inode写入时一起写入（在旁边）

43.5
检查点区域checkpoint regionCR
	包含指向最新inode映射的指针
	CR放在固定区域
	CR每30s会更新一次

43.8
储存目录

就是inode映射的集合

43.9
处理垃圾

LFS会定期查找文件数据
垃圾收集garbage collection
	自动为程序释放未使用的内存
	
	定期读入很多旧段
	然后确定哪些块在这个段里面
	写出一个新段只包含活着的块
	释放旧的


43.10

	